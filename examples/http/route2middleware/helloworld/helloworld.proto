syntax = "proto3";

package examples.http.route2middleware.helloworld;

option go_package = "github.com/go-kratos/kratos/examples/http/route2middleware/helloworld;helloworld";

import "google/api/annotations.proto";
import "middleware/middleware.proto";

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply)  {
    option (google.api.http) = {
      get: "/helloworld/{name}",
    };
    option (middleware.middlewares) = {
      middlewares: [ "github.com/go-kratos/kratos/examples/http/route2middleware/log.TimeMiddleware",
      "github.com/go-kratos/kratos/examples/http/route2middleware/auth.AuthMiddleware",
        "github.com/go-kratos/kratos/examples/http/route2middleware/log.LogMiddleware"],
    };
  }
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
